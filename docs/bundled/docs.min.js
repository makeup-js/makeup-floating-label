!function(e){var t={};function n(i){if(t[i])return t[i].exports;var l=t[i]={i:i,l:!1,exports:{}};return e[i].call(l.exports,l,l.exports,n),l.l=!0,l.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var l in e)n.d(i,l,function(t){return e[t]}.bind(null,l));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";document.addEventListener("DOMContentLoaded",(function(){var e=n(1),t=document.querySelectorAll(".floating-label"),i=document.getElementById("autofill"),l=document.getElementById("refresh"),o=[];t.forEach((function(t){o.push(new e(t))})),i.addEventListener("click",(function(){t.forEach((function(e){e.querySelector("input").value="Autofill Text"}))})),l.addEventListener("click",(function(){o.forEach((function(e,t){o[t].refresh()}))}))}))},function(e,t,n){"use strict";const i={labelElementAnimateModifier:"floating-label__label--animate",labelElementInlineModifier:"floating-label__label--inline",textboxElementBackgroundRGB:"rgb(255, 255, 255)"};function l(e){return e.value.length>0}function o(e,t){return getComputedStyle(e).backgroundColor!==t}function r(){l(this.textboxEl)||this.labelEl.classList.add(this.options.labelElementInlineModifier)}function s(){this.labelEl.classList.add(this.options.labelElementAnimateModifier),this.labelEl.classList.remove(this.options.labelElementInlineModifier)}e.exports=class{constructor(e,t){this.options=Object.assign({},i,t),this.rootEl=e,this.labelEl=this.rootEl.querySelector("label"),this.textboxEl=this.rootEl.querySelector("input"),this._onBlurListener=r.bind(this),this._onFocusListener=s.bind(this),this.textboxEl.addEventListener("blur",this._onBlurListener),this.textboxEl.addEventListener("focus",this._onFocusListener),l(this.textboxEl)||o(this.textboxEl,this.options.textboxElementBackgroundRGB)||this.labelEl.classList.add(this.options.labelElementInlineModifier)}refresh(){l(this.textboxEl)||o(this.textboxEl,this.options.textboxElementBackgroundRGB)?this.labelEl.classList.remove(this.options.labelElementInlineModifier):this.labelEl.classList.add(this.options.labelElementInlineModifier)}}}]);